// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { asTextContentResult } from 'hyperswitch-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import Hyperswitch from 'hyperswitch';

export const metadata: Metadata = {
  resource: 'refunds',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/refunds/list',
  operationId: 'List all Refunds',
};

export const tool: Tool = {
  name: 'list_refunds',
  description:
    'Lists all the refunds associated with the merchant, or for a specific payment if payment_id is provided',
  inputSchema: {
    type: 'object',
    properties: {
      start_time: {
        type: 'string',
        description:
          'The start time to filter payments list or to get list of filters. To get list of filters start time is needed to be passed',
        format: 'date-time',
      },
      amount_filter: {
        type: 'object',
        properties: {
          end_amount: {
            type: 'integer',
            description:
              'The end amount to filter list of transactions which are less than or equal to the end amount',
          },
          start_amount: {
            type: 'integer',
            description:
              'The start amount to filter list of transactions which are greater than or equal to the start amount',
          },
        },
        required: [],
      },
      connector: {
        type: 'array',
        description: 'The list of connectors to filter refunds list',
        items: {
          type: 'string',
        },
      },
      currency: {
        type: 'array',
        description: 'The list of currencies to filter refunds list',
        items: {
          $ref: '#/$defs/currency',
        },
      },
      end_time: {
        type: 'string',
        description:
          'The end time to filter payments list or to get list of filters. If not passed the default time is now',
        format: 'date-time',
      },
      limit: {
        type: 'integer',
        description: 'Limit on the number of objects to return',
      },
      merchant_connector_id: {
        type: 'array',
        description: 'The list of merchant connector ids to filter the refunds list for selected label',
        items: {
          type: 'string',
        },
      },
      offset: {
        type: 'integer',
        description: 'The starting point within a list of objects',
      },
      payment_id: {
        type: 'string',
        description: 'The identifier for the payment',
      },
      profile_id: {
        type: 'string',
        description: 'The identifier for business profile',
      },
      refund_id: {
        type: 'string',
        description: 'The identifier for the refund',
      },
      refund_status: {
        type: 'array',
        description: 'The list of refund statuses to filter refunds list',
        items: {
          $ref: '#/$defs/refund_status',
        },
      },
    },
    $defs: {
      currency: {
        type: 'string',
        description:
          'The three-letter ISO 4217 currency code (e.g., "USD", "EUR") for the payment amount. This field is mandatory for creating a payment.',
        enum: [
          'AED',
          'AFN',
          'ALL',
          'AMD',
          'ANG',
          'AOA',
          'ARS',
          'AUD',
          'AWG',
          'AZN',
          'BAM',
          'BBD',
          'BDT',
          'BGN',
          'BHD',
          'BIF',
          'BMD',
          'BND',
          'BOB',
          'BRL',
          'BSD',
          'BTN',
          'BWP',
          'BYN',
          'BZD',
          'CAD',
          'CDF',
          'CHF',
          'CLF',
          'CLP',
          'CNY',
          'COP',
          'CRC',
          'CUC',
          'CUP',
          'CVE',
          'CZK',
          'DJF',
          'DKK',
          'DOP',
          'DZD',
          'EGP',
          'ERN',
          'ETB',
          'EUR',
          'FJD',
          'FKP',
          'GBP',
          'GEL',
          'GHS',
          'GIP',
          'GMD',
          'GNF',
          'GTQ',
          'GYD',
          'HKD',
          'HNL',
          'HRK',
          'HTG',
          'HUF',
          'IDR',
          'ILS',
          'INR',
          'IQD',
          'IRR',
          'ISK',
          'JMD',
          'JOD',
          'JPY',
          'KES',
          'KGS',
          'KHR',
          'KMF',
          'KPW',
          'KRW',
          'KWD',
          'KYD',
          'KZT',
          'LAK',
          'LBP',
          'LKR',
          'LRD',
          'LSL',
          'LYD',
          'MAD',
          'MDL',
          'MGA',
          'MKD',
          'MMK',
          'MNT',
          'MOP',
          'MRU',
          'MUR',
          'MVR',
          'MWK',
          'MXN',
          'MYR',
          'MZN',
          'NAD',
          'NGN',
          'NIO',
          'NOK',
          'NPR',
          'NZD',
          'OMR',
          'PAB',
          'PEN',
          'PGK',
          'PHP',
          'PKR',
          'PLN',
          'PYG',
          'QAR',
          'RON',
          'RSD',
          'RUB',
          'RWF',
          'SAR',
          'SBD',
          'SCR',
          'SDG',
          'SEK',
          'SGD',
          'SHP',
          'SLE',
          'SLL',
          'SOS',
          'SRD',
          'SSP',
          'STD',
          'STN',
          'SVC',
          'SYP',
          'SZL',
          'THB',
          'TJS',
          'TMT',
          'TND',
          'TOP',
          'TRY',
          'TTD',
          'TWD',
          'TZS',
          'UAH',
          'UGX',
          'USD',
          'UYU',
          'UZS',
          'VES',
          'VND',
          'VUV',
          'WST',
          'XAF',
          'XCD',
          'XOF',
          'XPF',
          'YER',
          'ZAR',
          'ZMW',
          'ZWL',
        ],
      },
      refund_status: {
        type: 'string',
        description: 'The status for refunds',
        enum: ['succeeded', 'failed', 'pending', 'review'],
      },
    },
  },
};

export const handler = async (client: Hyperswitch, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  return asTextContentResult(await client.refunds.list(body));
};

export default { metadata, tool, handler };
