// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { asTextContentResult } from 'hyperswitch-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../../';
import Hyperswitch from 'hyperswitch';

export const metadata: Metadata = {
  resource: 'payouts.list',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/payouts/list',
  operationId: 'Filter payouts using specific constraints',
};

export const tool: Tool = {
  name: 'with_filters_payouts_list',
  description:
    "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nPayouts - List using filters",
  inputSchema: {
    type: 'object',
    properties: {
      currency: {
        $ref: '#/$defs/currency',
      },
      entity_type: {
        $ref: '#/$defs/entity_type',
      },
      start_time: {
        type: 'string',
        description:
          'The start time to filter payments list or to get list of filters. To get list of filters start time is needed to be passed',
        format: 'date-time',
      },
      connector: {
        type: 'array',
        description: 'The list of connectors to filter payouts list',
        items: {
          $ref: '#/$defs/payout_connectors',
        },
      },
      customer_id: {
        type: 'string',
        description: 'The identifier for customer',
      },
      end_time: {
        type: 'string',
        description:
          'The end time to filter payments list or to get list of filters. If not passed the default time is now',
        format: 'date-time',
      },
      limit: {
        type: 'integer',
        description: 'The limit on the number of objects. The default limit is 10 and max limit is 20',
      },
      offset: {
        type: 'integer',
        description: 'The starting point within a list of objects',
      },
      payout_id: {
        type: 'string',
        description: 'The identifier for payout',
      },
      payout_method: {
        type: 'array',
        description: 'The list of payout methods to filter payouts list',
        items: {
          $ref: '#/$defs/payout_type',
        },
      },
      profile_id: {
        type: 'string',
        description: 'The identifier for business profile',
      },
      status: {
        type: 'array',
        description: 'The list of payout status to filter payouts list',
        items: {
          $ref: '#/$defs/status',
        },
      },
    },
    $defs: {
      currency: {
        type: 'string',
        description:
          'The three-letter ISO 4217 currency code (e.g., "USD", "EUR") for the payment amount. This field is mandatory for creating a payment.',
        enum: [
          'AED',
          'AFN',
          'ALL',
          'AMD',
          'ANG',
          'AOA',
          'ARS',
          'AUD',
          'AWG',
          'AZN',
          'BAM',
          'BBD',
          'BDT',
          'BGN',
          'BHD',
          'BIF',
          'BMD',
          'BND',
          'BOB',
          'BRL',
          'BSD',
          'BTN',
          'BWP',
          'BYN',
          'BZD',
          'CAD',
          'CDF',
          'CHF',
          'CLF',
          'CLP',
          'CNY',
          'COP',
          'CRC',
          'CUC',
          'CUP',
          'CVE',
          'CZK',
          'DJF',
          'DKK',
          'DOP',
          'DZD',
          'EGP',
          'ERN',
          'ETB',
          'EUR',
          'FJD',
          'FKP',
          'GBP',
          'GEL',
          'GHS',
          'GIP',
          'GMD',
          'GNF',
          'GTQ',
          'GYD',
          'HKD',
          'HNL',
          'HRK',
          'HTG',
          'HUF',
          'IDR',
          'ILS',
          'INR',
          'IQD',
          'IRR',
          'ISK',
          'JMD',
          'JOD',
          'JPY',
          'KES',
          'KGS',
          'KHR',
          'KMF',
          'KPW',
          'KRW',
          'KWD',
          'KYD',
          'KZT',
          'LAK',
          'LBP',
          'LKR',
          'LRD',
          'LSL',
          'LYD',
          'MAD',
          'MDL',
          'MGA',
          'MKD',
          'MMK',
          'MNT',
          'MOP',
          'MRU',
          'MUR',
          'MVR',
          'MWK',
          'MXN',
          'MYR',
          'MZN',
          'NAD',
          'NGN',
          'NIO',
          'NOK',
          'NPR',
          'NZD',
          'OMR',
          'PAB',
          'PEN',
          'PGK',
          'PHP',
          'PKR',
          'PLN',
          'PYG',
          'QAR',
          'RON',
          'RSD',
          'RUB',
          'RWF',
          'SAR',
          'SBD',
          'SCR',
          'SDG',
          'SEK',
          'SGD',
          'SHP',
          'SLE',
          'SLL',
          'SOS',
          'SRD',
          'SSP',
          'STD',
          'STN',
          'SVC',
          'SYP',
          'SZL',
          'THB',
          'TJS',
          'TMT',
          'TND',
          'TOP',
          'TRY',
          'TTD',
          'TWD',
          'TZS',
          'UAH',
          'UGX',
          'USD',
          'UYU',
          'UZS',
          'VES',
          'VND',
          'VUV',
          'WST',
          'XAF',
          'XCD',
          'XOF',
          'XPF',
          'YER',
          'ZAR',
          'ZMW',
          'ZWL',
        ],
      },
      entity_type: {
        type: 'string',
        description:
          'Type of entity to whom the payout is being carried out to, select from the given list of options',
        enum: [
          'Individual',
          'Company',
          'NonProfit',
          'PublicSector',
          'NaturalPerson',
          'lowercase',
          'Personal',
        ],
      },
      payout_connectors: {
        type: 'string',
        enum: [
          'adyen',
          'adyenplatform',
          'cybersource',
          'ebanx',
          'nomupay',
          'payone',
          'paypal',
          'stripe',
          'wise',
        ],
      },
      payout_type: {
        type: 'string',
        description:
          'The payout_type of the payout request is a mandatory field for confirming the payouts. It should be specified in the Create request. If not provided, it must be updated in the Payout Update request before it can be confirmed.',
        enum: ['card', 'bank', 'wallet'],
      },
      status: {
        type: 'string',
        enum: [
          'success',
          'failed',
          'cancelled',
          'initiated',
          'expired',
          'reversed',
          'pending',
          'ineligible',
          'requires_creation',
          'requires_confirmation',
          'requires_payout_method_data',
          'requires_fulfillment',
          'requires_vendor_account_creation',
        ],
      },
    },
  },
};

export const handler = async (client: Hyperswitch, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  return asTextContentResult(await client.payouts.list.withFilters(body));
};

export default { metadata, tool, handler };
