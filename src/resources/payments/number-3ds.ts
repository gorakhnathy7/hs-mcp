// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../core/resource';
import { APIPromise } from '../../core/api-promise';
import { RequestOptions } from '../../internal/request-options';
import { path } from '../../internal/utils/path';

export class Number3DS extends APIResource {
  /**
   * External 3DS Authentication is performed and returns the AuthenticationResponse
   *
   * @example
   * ```ts
   * const response =
   *   await client.payments.number3DS.authenticate(
   *     'payment_id',
   *     {
   *       client_secret: 'client_secret',
   *       device_channel: 'APP',
   *       threeds_method_comp_ind: 'Y',
   *     },
   *   );
   * ```
   */
  authenticate(
    paymentID: string,
    body: Number3DSAuthenticateParams,
    options?: RequestOptions,
  ): APIPromise<Number3DSAuthenticateResponse> {
    return this._client.post(path`/payments/${paymentID}/3ds/authentication`, { body, ...options });
  }
}

/**
 * Indicates if 3DS method data was successfully completed or not
 */
export type ThreeDSCompletionIndicator = 'Y' | 'N' | 'U';

export interface Number3DSAuthenticateResponse {
  /**
   * Three DS Requestor URL
   */
  three_ds_requestor_url: string;

  /**
   * Indicates the transaction status
   */
  trans_status: 'Y' | 'N' | 'U' | 'A' | 'R' | 'C' | 'D' | 'I';

  /**
   * Unique identifier assigned by the EMVCo(Europay, Mastercard and Visa)
   */
  acs_reference_number?: string | null;

  /**
   * Contains the JWS object created by the ACS for the ARes(Authentication Response)
   * message
   */
  acs_signed_content?: string | null;

  /**
   * Unique identifier assigned by the ACS to identify a single transaction
   */
  acs_trans_id?: string | null;

  /**
   * Access Server URL to be used for challenge submission
   */
  acs_url?: string | null;

  /**
   * Challenge request which should be sent to acs_url
   */
  challenge_request?: string | null;

  /**
   * Merchant app declaring their URL within the CReq message so that the
   * Authentication app can call the Merchant app after OOB authentication has
   * occurred
   */
  three_ds_requestor_app_url?: string | null;

  /**
   * Unique identifier assigned by the 3DS Server to identify a single transaction
   */
  three_dsserver_trans_id?: string | null;
}

export interface Number3DSAuthenticateParams {
  /**
   * Client Secret
   */
  client_secret: string;

  /**
   * Device Channel indicating whether request is coming from App or Browser
   */
  device_channel: 'APP' | 'BRW';

  /**
   * Indicates if 3DS method data was successfully completed or not
   */
  threeds_method_comp_ind: ThreeDSCompletionIndicator;

  /**
   * SDK Information if request is from SDK
   */
  sdk_information?: Number3DSAuthenticateParams.SDKInformation | null;
}

export namespace Number3DSAuthenticateParams {
  /**
   * SDK Information if request is from SDK
   */
  export interface SDKInformation {
    /**
     * Unique ID created on installations of the 3DS Requestor App on a Consumer Device
     */
    sdk_app_id: string;

    /**
     * JWE Object containing data encrypted by the SDK for the DS to decrypt
     */
    sdk_enc_data: string;

    /**
     * Public key component of the ephemeral key pair generated by the 3DS SDK
     */
    sdk_ephem_pub_key: { [key: string]: string };

    /**
     * Indicates maximum amount of time in minutes
     */
    sdk_max_timeout: number;

    /**
     * Identifies the vendor and version for the 3DS SDK that is integrated in a 3DS
     * Requestor App
     */
    sdk_reference_number: string;

    /**
     * Unique transaction identifier assigned by the 3DS SDK
     */
    sdk_trans_id: string;

    /**
     * Enum representing the type of 3DS SDK.
     */
    sdk_type?: '01' | '02' | '03' | '04' | '05' | null;
  }
}

export declare namespace Number3DS {
  export {
    type ThreeDSCompletionIndicator as ThreeDSCompletionIndicator,
    type Number3DSAuthenticateResponse as Number3DSAuthenticateResponse,
    type Number3DSAuthenticateParams as Number3DSAuthenticateParams,
  };
}
